// <auto-generated />
using System;
using InventoryManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InventoryManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210722163523_SeedingBatches")]
    partial class SeedingBatches
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InventoryManagement.Data.Entities.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchasedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantities")
                        .HasColumnType("int");

                    b.HasKey("BatchId");

                    b.HasIndex("ProductId");

                    b.ToTable("Batches");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            Cost = 9.0,
                            ExpirationDate = new DateTime(2022, 2, 7, 10, 35, 20, 642, DateTimeKind.Local).AddTicks(7289),
                            Manufacturer = "M1",
                            ProductId = 1,
                            PurchasedDate = new DateTime(2021, 7, 22, 10, 35, 20, 649, DateTimeKind.Local).AddTicks(3200),
                            Quantities = 200
                        },
                        new
                        {
                            BatchId = 2,
                            Cost = 8.0,
                            ExpirationDate = new DateTime(2022, 8, 26, 10, 35, 20, 649, DateTimeKind.Local).AddTicks(3914),
                            Manufacturer = "M1",
                            ProductId = 1,
                            PurchasedDate = new DateTime(2021, 7, 22, 10, 35, 20, 649, DateTimeKind.Local).AddTicks(3930),
                            Quantities = 200
                        },
                        new
                        {
                            BatchId = 3,
                            Cost = 7.0,
                            ExpirationDate = new DateTime(2021, 10, 30, 10, 35, 20, 649, DateTimeKind.Local).AddTicks(3935),
                            Manufacturer = "M1",
                            ProductId = 1,
                            PurchasedDate = new DateTime(2021, 7, 22, 10, 35, 20, 649, DateTimeKind.Local).AddTicks(3938),
                            Quantities = 200
                        });
                });

            modelBuilder.Entity("InventoryManagement.Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnSale")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Brand = "BrandA",
                            Category = "Fashion",
                            Location = "A8",
                            Name = "Product A",
                            OnSale = true,
                            Price = 9.0
                        });
                });

            modelBuilder.Entity("InventoryManagement.Data.Entities.Batch", b =>
                {
                    b.HasOne("InventoryManagement.Data.Entities.Product", "Product")
                        .WithMany("Batches")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("InventoryManagement.Data.Entities.Product", b =>
                {
                    b.Navigation("Batches");
                });
#pragma warning restore 612, 618
        }
    }
}
